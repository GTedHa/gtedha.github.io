{"meta":{"title":"G.TED's Devtalk","subtitle":"soso한 개발 이야기","description":"소프트웨어 개발과 관련된 이런 저런 주제들에 대해서 이야기합니다.","author":"G.TED","url":"https://gtedha.github.io","root":"/"},"pages":[{"title":"About G.TED","date":"2019-07-02T10:28:45.000Z","updated":"2019-08-14T18:07:34.769Z","comments":true,"path":"about/index.html","permalink":"https://gtedha.github.io/about/index.html","excerpt":"","text":"다양한 기술적 관심사를 가지고 여러 기술들을 넘나드는 통찰력을 가지고 싶은 소프트웨어 개발자.분야를 한정짓지 않고 흥미로워 보이는 현실의 문제들을 소프트웨어적으로 풀어내는데 관심이 많다. 웹 개발, 게임 개발 그리고 로봇 개발 등 다양한 분야에서 개발 경험을 쌓아왔으며 이런 경험들이 기술적 시야를 넓혀준다고 믿고있다. 경력 2019.07 ~ 카카오 AI Lab, 검색 서비스 소프트웨어 개발자 2017.03 ~ 2019.07 유진로봇, 서비스 로봇 소프트웨어 개발자 학력 2015.03 ~ 2017.08 연세대학교 융합공학과, 석사 학위 취득 연구 주제: Virtual Reality Serious Game Development 2010.03 ~ 2015.02 연세대학교 컴퓨터과학과, 학사 학위 취득 나의 기술적 경험 및 경력들에 대해 자세한 내용은 G.TED career에 정리되어 있다."}],"posts":[{"title":"카카오 채용 과정 후기 5편 (1차 인터뷰)","slug":"kakao-recruitment-review-5","date":"2019-12-07T07:30:00.000Z","updated":"2019-12-07T07:30:00.000Z","comments":true,"path":"2019/12/07/kakao-recruitment-review-5/","link":"","permalink":"https://gtedha.github.io/2019/12/07/kakao-recruitment-review-5/","excerpt":"","text":"채용 과정 후기를 기록하는 것은 카카오 채용 과정에 관심있는 다른 분들과 공유한다는 의미도 있지만, 내 스스로 그 과정을 리마인드 한다는 의미에서 이 포스팅을 시작했다. 그러나 그 것이 생각보다 길어져서 사실 있고 지냈다. (벌써 합격 발표를 받은지 반년이 넘어가고 입사한지도 어느덧 네 달이 지났..) 그러던 중 이 포스팅 시리즈들이 구글에 노출되는 빈도가 늘어나고 몇 분이 댓글도 달아주셔서 “아, 마무리는 지어야겠구나..” 하는 생각이 들었다. 1차 인터뷰1차 인터뷰는 기술적인 질문이 대부분이었다. 카카오는 면접관 구성 방식이 채용하려는 조직에서 대부분 면접관으로 참여하고 공통면접관이라고 해서 다른 조직의 한 명이 참여하는 것 같다. (일종의 부정 방지라고 할까..?) 우선 첫번째로 주어진 것은 손코딩. 문제는 어려운 편이 아니었다. 받아보는 순간 어렵지 않은 문제라는 직감은 왔지만, 면접장이라는 특수함이 주는 압박감이 나의 사고 과정을 방해하였다. 인터넷에서 기술 인터뷰 팁을 찾던 중에 내가 주의 깊게 본 것이 있었는데, 그게 바로 손코딩 시에 문제 풀이가 막히면 마냥 붙들고 생각만 하지 말고 현재 하고 있는 생각들을 면접관들에게 설명을 하면서 진행하라는 것이었다. 나의 경우에도 화이트보드 앞에 서서 직접 문제들을 읽으면서 떠오르는 주의해야될 점 당장 떠오르는 접근 방법(실제로 그게 맞을지 안 맞을지 모르지만) 등의 내 머릿속 생각들을 말로 전달했다. 이게 참 중요한 이유가 뭐냐면, 외국에서는 rubber duck debugging이라고 부르는데 내 생각을 말로 하는 과정에서 사고의 활로가 열리는 것이다. 그리고, 면접관들도 내가 마냥 멍청하게 있는게 아니라고 생각함과 동시에 면접자가 무슨 생각을 하는지 파악할 수 있기 때문에 간단한 힌트를 줄 수도 있다. 사실 인터뷰는 면접관이 면접자를 압박해서 궁지에 몰아넣고 탈락시킬 이유를 찾아내기 위한 것이 아니라, 면접관과 면접자가 함께 호흡하며 같이 일할만한 이유를 얼마나 찾을 수 있는가를 보기 위한 것이다. (요즘 이 업계에서 압박인터뷰 하면 사람들 사이에 악소문만 돌고, 면접자가 아쉬운 입장이 아니라면 굳이 그 회사를 선택할 이유가 없다라고 생각한다.) 그렇게 기본적인 문제 풀이는 생각보다 쉽게 끝났지만, 거기서 추가적인 질문이 나왔다. 좀 더 특수한 상황에서는 어떤 자료구조를 사용하는 것이 더 유리하다고 생각하냐는 것이었다. 여기서 좀 막히긴 했지만, 면접관 한 분이 그 ‘특수한 상황’에 대해서 구체적인 수치로 설명을 해주면서 그 질문의 의도를 파악할 수 있었고 문제를 해결하였다. 이거는 후담인데, 내가 추가 질문에서 막히니까 다들 ‘아,,, 저 문제 못 풀면 어떡하지..?’라고 생각했다고 한다. 이것이 앞서 말한 것처럼 면접관 쪽에서도 귀한 시간 내어서 참여하는 것이기 때문에 최대한 면접자와 함께 일할 이유를 찾는 것임을 방증한다고 생각한다. 생각보다 손코딩 이야기가 길어졌는데, 사실 경력자에게는 더 중요한 면접 과정이 있다. 바로 자신의 경력에 대한 설명이다. 경력 소개를 해보니까 딱 두가지 생각이 들었다. 첫번째는 “아, 정말 내가 이 프로젝트에 많은 공을 쏟았고 애착을 가지고 있었구나..”, 두번째는 “와, 그렇지 않았다면 여기서 바로 필터링 되겠네..”. 그냥 여기서 하고싶은 말은 딱 하나다. 이직을 하더라도 현재 하고있는일에 소홀하지 말고 최선을 다 하자. 그리고 면접 전에 내 경력에서 무엇을 (어떤 프로젝트의 어떤 부분을) 중점적으로 얘기할지, 어떤 부분을 처낼지 잘 준비하는 것이 중요하다고 생각한다. 참고로 나는 미리 경력 내의 프로젝트들을 어떻게 설명할지 문서로 정리하고, 다시 읽어보면서 어떤 질문이 들어올 수 있을지 미리 예상해서 그것까지 정리한 뒤에 인터뷰에 임했다. 그 외의 것을 정리해보면 다음과 같은 것들이 있었다. 자기소개서나 기술경력서에 알고 있다고 자랑한 것들에 대한 검증. 예를 들면, Git을 통한 협력에 관한 부분들, Python의 특징과 관련된 부분들. 그러니 서류과정에서 심한 구라를 치지말거나, 구라를 쳤다면 확실히 공부해서 인터뷰에 임해야 한다. 원격인터뷰때 제대로 답하지 못한 부분들에 대한 재검증. 이 부분도 준비할 때 놓쳐서는 안 된다. 기술적인 철학이나 협업에 임하는 태도 등에 대한 내용. 반드시 글로 정리해보면 좋다. 사실 프로라면 자신만의 철학과 소신이 있는게 여러모로 (남이 보는 내 모습과 평가에서든 내 스스로가 커리어에 있어서 가야할 방향을 잃지 않는 부분에서든) 필요하지 않을까? 그렇게 인터뷰가 끝나고 스스로 만족스럽진 않았지만 즐거운 인터뷰였다. 다행스럽게도 바로 다음날 오후에 합격 소식을 들어서 소위 ‘쫄리는’ 시간이 짧았다. * 조직마다 인터뷰 방식이 매우 상이하므로 이 기록은 오직 제 경험을 정리한 것일 뿐임을 말씀드립니다.","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"커리어","slug":"잡담/커리어","permalink":"https://gtedha.github.io/categories/잡담/커리어/"}],"tags":[{"name":"카카오","slug":"카카오","permalink":"https://gtedha.github.io/tags/카카오/"},{"name":"채용","slug":"채용","permalink":"https://gtedha.github.io/tags/채용/"},{"name":"면접","slug":"면접","permalink":"https://gtedha.github.io/tags/면접/"},{"name":"후기","slug":"후기","permalink":"https://gtedha.github.io/tags/후기/"},{"name":"검색시스템","slug":"검색시스템","permalink":"https://gtedha.github.io/tags/검색시스템/"},{"name":"원격 인터뷰","slug":"원격-인터뷰","permalink":"https://gtedha.github.io/tags/원격-인터뷰/"},{"name":"전화 면접","slug":"전화-면접","permalink":"https://gtedha.github.io/tags/전화-면접/"},{"name":"인터뷰","slug":"인터뷰","permalink":"https://gtedha.github.io/tags/인터뷰/"}]},{"title":"카카오 채용 과정 후기 4편 (원격 인터뷰)","slug":"kakao-recruitment-review-4","date":"2019-09-12T08:20:00.000Z","updated":"2019-09-12T08:20:00.000Z","comments":true,"path":"2019/09/12/kakao-recruitment-review-4/","link":"","permalink":"https://gtedha.github.io/2019/09/12/kakao-recruitment-review-4/","excerpt":"","text":"원격 인터뷰 원격 인터뷰는 기술 관련된 인터뷰이며 정해진 시간(5월 9일 오후 2시)에 인터뷰어가 전화를 나에게 걸고 약 1시간 정도 소요될 것이라고 미리 안내를 받았다. 인터뷰 일정에 맞춰서 다니던 직장에서 2시간 연차를 내고 주차장에 주차되어 있는 차 안에서 전화를 받았다. 이 인터뷰로 인해서 얼마 남지 않은 연차를 많이 사용하는게 부담스러웠고 카페나 스터디 공간을 찾아가자니 생각지 못한 변수가 발생할까봐 차에서 진행하기로 하였다. 우선 사전에 준비했던 것은 내가 기술적 &amp; 커리어적으로 어필하고 싶은 내용들을 정리한 아이패드였다. 전화 인터뷰의 이점을 최대한 살리는 방법으로 내가 어필하고 싶은 내용을 충분히 어필했는지 확인해가면서 인터뷰를 진행해나가기 위한 준비였다. 그리고 원격 인터뷰가 세 차례 인터뷰 과정의 시작이었기 때문에 원격 인터뷰 이후의 과정에서 중요한 참고 자료가 될 것으로 생각하여 아이패드에서 음성 녹음을 켜두었다. 원격 인터뷰 상세한 내용은 보안 관계상 공개적으로 밝힐 수 없지만 대략의 내용만 밝히자면 다음과 같은 것들이 있었다. * 지원 동기 * 지금껏 해온 일에 대한 설명 (설계 및 구현 내용에 관하여) * 다룰 수 있는 언어의 종류 * 기존 회사에서 겪었던 문제점들과 해결하려고 시도했던 노력 * Git 사용 관련 * OS 관련된 내용 * 검색 시스템과 관련한 지식 인터뷰어의 질문 흐름을 보았을 때 질문 내용들이 철저히 준비되어서 나왔다기보다 몇 가지 질문에서 내가 대답한 내용들을 바탕으로 이어지는 질문들이었다. Git 사용 관련 질문과 검색 시스템과 관련 지식에 대한 질문은 내가 지원한 부서에 맞게 관련 경험을 자기소개 및 프로젝트 기술서에서 어필한 내용을 바탕으로 나왔다. 그리고 간단한 질문(사용할 수 있는 언어의 종류와 같은 질문)에 대해서는 함부러 이것 저것 열거만 하면 실제로 지식이나 경험의 깊이를 파악하기 위한 추가 질문이 꼬리를 물고 이어질 수 있으므로 주의해야 한다. 모르는 내용은 모른다고 확실히 해두는 것도 어설프게 아는 척 하지 않는 사람임을 어필하는 측면에서 좋았던 것 같다. (다 모른다고 하면 당연히 탈락하겠지만… ^^;) 자신있는 내용은 내 스스로가 신나서 자신있게 대답했던 것이 플러스 요인이 아니었을까 추측해본다. 인터뷰 자체의 내용보다는 관련 여담을 늘어놓자면 첫번째로 인터뷰어의 태도도 상당히 중요했던 것 같다. 나의 경우에 인터뷰어가 목소리와 분위기가 나를 배려해주고 편하게 해주려는 느낌이 많이 들어서 떨리지만 신나게 인터뷰를 할 수 있었다. 내가 대답을 시도하다가 조금씩 막히면 조금씩 힌트나 가이드를 줘서 대답을 마무리할 수 있게 도와주셨다. 그래서 인터뷰가 종료되고 제대로 대답했는지 기억도 안 날 정도로 얼떨떨했지만 카카오와 검색시스템 팀에 대해서는 긍정적인 느낌이 남게 되었다. 두번째로 면접 내용 녹음은 상당히 의미가 있었다. 면접이 끝나고 나서 다시 들으면서 질문과 나의 답변을 문서로 정리하였는데 이 과정에서 나의 좋지 않은 말 버릇을 파악하고 제대로 대답하지 못한 내용들에 대해서 다시 정확하게 정리할 수 있는 기회가 되었다(엄청난 자기 반성의 시간). 그리고 이래서 합격할 수 있을까 하는 약간의 좌절감 섞인 생각도 하였다 ^^;; 기술적으로 부족했던 부분을 파악할 수 있어서 합격 여부를 떠나 매우 만족스러웠다. 세번째로 남아있는 오프라인 면접에 대비할 중요한 단서를 마련할 수 있었다. 실제로 전화 인터뷰에서 제대로 답하지 못한 내용에 대해서 1차 기술 인터뷰 때 다시 질문 받기도 했었다. 그리고 다음날 오전, 생각했던 것보다 이른 시간에 인터뷰 합격 소식을 전해들을 수 있었다. 사실 이때 인터뷰어가 지금 일하는 조직의 조직장이신데, 원격 인터뷰 내용을 녹음해서 분석했다고 솔직하게 말씀드렸더니 나보고 무서운 사람이라고 하셨다 :)","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"커리어","slug":"잡담/커리어","permalink":"https://gtedha.github.io/categories/잡담/커리어/"}],"tags":[{"name":"카카오","slug":"카카오","permalink":"https://gtedha.github.io/tags/카카오/"},{"name":"채용","slug":"채용","permalink":"https://gtedha.github.io/tags/채용/"},{"name":"면접","slug":"면접","permalink":"https://gtedha.github.io/tags/면접/"},{"name":"후기","slug":"후기","permalink":"https://gtedha.github.io/tags/후기/"},{"name":"검색시스템","slug":"검색시스템","permalink":"https://gtedha.github.io/tags/검색시스템/"},{"name":"원격 인터뷰","slug":"원격-인터뷰","permalink":"https://gtedha.github.io/tags/원격-인터뷰/"},{"name":"전화 면접","slug":"전화-면접","permalink":"https://gtedha.github.io/tags/전화-면접/"}]},{"title":"카카오 채용 과정 후기 3편 (기술 인터뷰 준비)","slug":"kakao-recruitment-review-3","date":"2019-08-15T07:30:00.000Z","updated":"2019-08-15T07:30:00.000Z","comments":true,"path":"2019/08/15/kakao-recruitment-review-3/","link":"","permalink":"https://gtedha.github.io/2019/08/15/kakao-recruitment-review-3/","excerpt":"","text":"5월 3일 오전에 이메일을 통해서 코딩테스트 합격 소식을 받은 후, 그 날 오후에 바로 원격 인터뷰(전화 인터뷰) 일정 조율 전화가 걸려왔다. 일정 조율은 비교적 지원자의 스케줄을 잘 맞춰주는 편이었다. 그리하여 5월 9일 오후 2시에 원격 인터뷰 일정이 잡히게 되었다. 사실 코딩테스트 전까지는 ‘코딩테스트만 잘 넘기면 그 다음은 뭐…’라고 생각하였으나, 코딩테스트를 지나고보니 그게 아니었다. 코딩테스트는 leetcode, hankerrank 등의 알고리즘 문제 풀이 사이트를 통해서 연습을 하다보면 어느정도 유형이 나오지만, 인터뷰의 경우에는 무슨 내용이 나올지 몰라 엄청 막막했다. 특히나, 제대로 알아본적도 없는 검색시스템이라는 부서에 지원을 했으니… 그나마 다행이었던건 이맘때쯤이 주말, 어린이날 대체공휴일을 끼고 있는 긴 주말을 포함하고 있었고 근처에 조용히 오랜시간 방해받지 않고 공부에 집중할 수 있는 공간이 있었다. 그리고 모르긴 몰라도 일반적인 개발자 면접에서 나올법한 내용들을 대충 추려보면 이것도 어차피 정해진 범위 내에서 나오지 않을까 하는 생각으로 지금까지 배워온 것들 그 중에서도 특히 학부때 배운 컴퓨터과학 전공의 중요한 부분들을 복습하기 시작했다. 우선 구글 문서를 하나 띄워서 생각나는 주요 키워드들을 쭉 나열하고 관련된 내용을 인터넷이나 책에서 찾아가면서 키워드 밑에 정리해나갔다. 학부 기초과목들 중에서 주요하게 정리했던건 다음과 같은 것들이 있었다.(참고로 아래 내용들을 5월 3일부터 5월 9일 사이의 짧은 기간에 정리하고 복습했던건 아니다. 5월 3일 코딩테스트 합격 발표 이전부터 주요 키워드들을 정리해두었고 5월 14일 1차 대면 인터뷰 직전까지 계속해서 각 키워드에 대한 개념을 정리한 것을 아래에 나열하였다.) Data Structure &amp; Algorithm사실 면접 관련해서 제일 공들여서 대비해야하는 것이 바로 자료구조와 알고리즘 부분인 것 같다. 우선 전체 면접 질문들 중에 차지하는 비중이 가장 컸다. 나는 2년이 조금 넘는 내 경력에서 Python만 주구장창 사용하였는데 마침 “Data Structure &amp; Algorithms in Python”이라는 PDF 버전의 영문판 책을 인터넷에서 구하게 되어서 도움을 많이 받았다. 이 책 인터넷에 제목 검색하면 PDF 파일이 바로 나온다(링크). 영어이긴 하지만 내용이 좋아서 혹시 책이 필요한 분들에겐 강추한다. 내 기억에 학부 시절에 봤던 교과서는 같은 책의 C++ 버전이었던 것 같다.이 과목에서는 중요하게 다뤘던 sorting, binary search tree, hash, sortest path finding (graph) 등에 대해서 복습하였다. Linked list나 stack, queue 개념은 너무 기본적인 거라 대충 훑어만 보았다. Sorting에서는 면접에 자주 나오기로 악명 높은 merge-sort, quick-sort 이 둘을 직접 구현도 해보면서 익숙해지기 위해 노력하였다. O(N^2) 시간복잡도의 기본적인 sorting 알고리즘들도 한번정도는 더 훑어보았다. Binary search tree는 알고리즘 문제 풀이 사이트에서 자주 접했기 때문에 여전히 친숙하였으나 balancing 관련한 것들과 몇 가지 구두로 답변해야될 수도 있는 특성들에 대해서 복습하였다. RB-tree의 구현체와 같이 balancing tree의 직접적인 구현 및 상세 특성들에 대해서는 안 봤다.. 아시다시피 짧은 기간 내에 다시 본들 공부 대비 답변 효율이 좋은 것도 아니고 이건 물어보면 면접관이 (이 자료 구조를 다루는 업무를 보는게 아니라면) 좀 변태같다고 느껴질 수 있는거라..;; Hash와 관련해서는 원격 인터뷰 후기에서도 언급할테지만 학부 시절 교수님이 늘 중요하다고 강조했던 것에 비하여 그 중요성을 간과하여 아쉬운 부분이 많았다. Hash는 비교적 간단하면서도 면접에서 항상 허를 찌를 수 있는 부분이 있다고 생각하기 때문에 꼼꼼히 그 특성에 대해서 공부해야한다. 물론, 업무에서도 자주 쓰이는 중요한 자료구조이기 때문에 더더욱 중요하다. Hash function의 구조, collision handling 등의 기본적인 부분에 주의해서 공부를 해야한다. Shortest path finding 관련해서는 다익스트라 알고리즘이 유명하기 때문에 다시 복습하고 관련된 알고리즘 문제를 풀면서 구현을 해봤다. 사실 이 shortest path finding 분야도 공부 대비 질문 확률, 즉 가성비가 좋은 부분은 아니라 다익스트라 알고리즘 선에서 끝냈다. 다시 한 번 구현해 봤다는 것에 재미와 자부심을 느끼며.. ㅎㅎ 그 외에는 heap, (2, 4) tree, B-tree, depth-first search, breadth-first search, 그리고 hash의 상위 개념인 associative array(map) 등에 대해서 복습하였다. Operating System &amp; Computer SystemOS 과목은 학부 시절 최애 과목이었기 때문에 자신이 있었지만, 역시나 내 기억 속에는 오랜 세월의 흔적이 남아있었다. 주로 도움을 받은 책은 한빛아카데미에서 나온 책 “쉽게 배우는 운영체제”(링크)과 너무나도 유명한 OS계의 교과서 공룡책 “Operating System Concepts”(링크)이 있다. 한빛아카데미에서 나온 책은 쉽게 쓰여있어서 읽기 좋아서 구입할만하다고 생각한다. 그리고 공룡책은 인터넷에 검색하면 영문판 PDF 파일들이 널려있기 때문에 이를 참고해도 되고, 전공자 혹은 컴퓨터를 업으로 삼는 사람이라면 기념으로 한 권 정도는 사두는 것도 좋다고 생각한다.다만, OS 파트는 열심히 복습하였지만!!! 면접 질문으로는 나오지 않았다 ^^;; OS의 정의와 역할부터 시작해서 다시 봤다. 커널의 의미, 역할, 구조 그리고 syscall에 대해서 찾아보고 폰노이만 구조로 대변되는 컴퓨터의 기본 구조와 인터럽트의 개념에 대해서 정리하였다. 프로세스와 프로세스 스케줄링 알고리즘들을 무엇보다 흥미롭게 복습하였다. 이 파트가 OS 파트의 꽃 중에 하나랄까..? 우선 프로세스의 정의, 프로세스의 상태 정의, PCB(Process Control Block)의 역할 및 구성, Context Switching, Thread와의 비교 등 프로세스의 기본 적인 내용들을 복습하였다. 그 후에 책에 나오는 각종 프로세스 스케줄링 알고리즘들의 각 특성들을 정리하였다. OS 관련한 면접 질문이 나온다면 프로세스와 관련하여 나올 가능성이 가장 크다고 생각하기 때문에 (제일 물어볼만한 내용들이 많다) 확실히 공부해두는 것이 좋다고 생각한다. 특히 프로세스 스케줄링 알고리즘들은 물어보기 너무 좋은 내용이 아닌가 싶다. Deadlock 또한 주변에서 듣기로 면접 단골 질문 중 하나라고 알고있다. Deadlock 뿐만 아니라 멀티스레딩 프로그래밍의 중요한 포인트에 대해서 “게임 서버 프로그래밍 교과서”(링크)라는 책을 통해 많이 얻어갔다. 게임 서버를 구현하면서 중요한 개념들을 설명하는 책인데, 게임 서버 구현이 아니라 그냥 프로그래밍 공부를 위해서도 읽을만한 책이라 추천한다. 세 가지 캐시 교체 알고리즘에 대해서 복습하였다. 캐시라는 개념은 응용소프트웨어 레벨에서도 프로그래밍 기법으로도 많이 사용되고 그러므로 딱 물어보기 좋기 때문에 LRU, FIFO, LFU로 대표되는 캐시 교체 알고리즘의 의미에 대해서 정리하였다. 그 외에 메모리 관리 기법, 스토리지 관리 기법 등등에 대해서도 복습을 하려했지만,,, 시간 관계상 다 하지 못 하였다. 나중에 시간이 될 때, 페이징, RAID 등 이번에 다루지 못한 OS 및 컴퓨터 시스템 주요 개념들에 대해서 공부를 할 계획이다. 어쩌면 다음 이직 때..? OOPOOP 개념 및 특징은 면접 단골 질문이라 배제할 수 없었다. 그러나 내 면접에선 질문으로 등장하지 않았다.SOLID로 유명한 OOP 설계의 다섯 가지 기본 원칙 그리고 Capsulation, Inheritance, Polymorphism, Dynamic Binding 등으로 나타나는 OOP의 기본 특징들에 대해서 복습하였다. 그냥 혹시나 몰라서 다시 한 번 봤다. DatabaseDatabase는 상대적으로 CS 코어 과목에서 우선순위가 낮아서 제대로 공부하지 못했다. 그래도 ‘혹시 모르니’ 하는 마음으로 RDBMS의 Primary key, Foreign key, Unique key 각각의 개념, ACID로 대표되는 트랜잭션 보장을 위한 중요한 특성들, 그리고 기본적인 NoSQL DBMS들의 특징들에 대해서 정리하였다. 그 외요즘 개발 업계의 트랜디한 용어들(machine learning, microservices architecture, graph API 등)에 대한 내용, 네트워크 프로토콜 종류 및 특징, sync vs. async 프로그래밍, functional programming의 특성 등등등 여러가지 생각나는대로 검색하고 문서에 정리하였다. 그 다음으로, 나는 경력자로 지원한 것이었기 때문에 (검색분야는 처음이긴 하지만..) 당연히 내 경력 상의 경험들에 대해서 기술적인 질문들이 들어올 것을 대비하기 위해서, 제출한 프로젝트 기술서 내용 가운데 설명해야할만한 기술적인 부분들을 정리한 문서를 작성하였다. 내용이 궁금하다면 링크를 따라가시길 :~) 지나고보니 뭔가 많이 준비하긴 했구나 싶은데 막상 준비할 때는 모든 것이 부족해보였다. 준비하지 않음으로 인한 불합격이 두려워서 이것저것 찾고 정리하고 공부했던 것들이 나를 채용 과정 합격으로도 이끌었지만, 이 과정들이 한편으로는 내 커리어에 있어서 기초적인 내실을 한 번 다지고 가는 좋은 기회였다. :)","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"커리어","slug":"잡담/커리어","permalink":"https://gtedha.github.io/categories/잡담/커리어/"}],"tags":[{"name":"카카오","slug":"카카오","permalink":"https://gtedha.github.io/tags/카카오/"},{"name":"채용","slug":"채용","permalink":"https://gtedha.github.io/tags/채용/"},{"name":"면접","slug":"면접","permalink":"https://gtedha.github.io/tags/면접/"},{"name":"후기","slug":"후기","permalink":"https://gtedha.github.io/tags/후기/"},{"name":"검색시스템","slug":"검색시스템","permalink":"https://gtedha.github.io/tags/검색시스템/"},{"name":"원격 인터뷰","slug":"원격-인터뷰","permalink":"https://gtedha.github.io/tags/원격-인터뷰/"},{"name":"전화 면접","slug":"전화-면접","permalink":"https://gtedha.github.io/tags/전화-면접/"}]},{"title":"카카오 채용 과정 후기 2편 (코딩테스트 후기)","slug":"kakao-recruitment-review-2","date":"2019-07-18T10:00:00.000Z","updated":"2019-07-18T10:00:00.000Z","comments":true,"path":"2019/07/18/kakao-recruitment-review-2/","link":"","permalink":"https://gtedha.github.io/2019/07/18/kakao-recruitment-review-2/","excerpt":"","text":"2019년 4월 23일에 시작된 서류 과정의 결과는 4월 27일 코딩테스트 안내와 함께 공지되었다. 지원 서류 검토가 매우 빨리 진행되었다는 생각이 들었다. 구체적인 코딩테스트 안내 메일에는 다음과 같이 안내되어있었다. 본 메일이 발송된 날을 기준으로 1주일(05월 04일) 24:00 내로 테스트를 완료해 주기 바라며 문의 사항이 있으실 경우 회신을 통해 영입담당자에게 문의 주시기 바랍니다.결과는 테스트 답안 제출 후 1주일 이내(+최대 3일)로 안내드릴 예정입니다. 테스트 당일 최상의 컨디션으로 임하고 싶은 마음에 휴일인 5월 1일 근로자의날 낮에 시험을 치루었다. 앞선 글에서 말했듯 leetcode 사이트를 통해서 약 한달간 준비를 했는데, 그 것이 무색하게 시험 난이도는 그리 어렵지 않았고 주어진 시간도 충분했다. 3문제에 4시간이었던 것으로 기억한다. 기본적인 코딩 능력만을 검증하려는 의도로 보였다. 어차피 세 차례의 면접 과정이 뒤에서 기다리고 있으니까… @_@; ‘네 실력은 면접에서 탈탈 털어주겠다!’라는 마인드였으려나..? 문제 자체는 유출이 금지되어 있어서 공개할 수 없지만 주로 배열을 다루는 문제 3개가 주어졌다. 그리고 무난한 난이도의 문제인만큼 결과적으로 시간복잡도가 O(n)이 나오는 해답들을 제시하였다. 테스트 케이스 내용 자체가 공개되지는 않았지만 다행스럽게도 주어진 테스트 케이스들을 다 통과했는지 여부를 알 수 있었기 때문에 세 문제 모두 적절한 해답을 제시하였음을 확인할 수 있었다. 세번째 문제는 처음 풀이 방법이 몇 가지 엣지 케이스를 커버하지 못 하여 조금 까다롭다고 느껴졌으나, 2~30분 정도 숙고한 결과 모든 테스트 케이스를 통과하는 해답을 찾아내었다. 카카오를 포함한 여러 회사와 관련된 채용 과정 후기 글들을 찾아보면서 코딩테스트 문제 풀이와 관련하여 면접 시에 질문할 수도 있다고 하여서 주어진 시간 중 풀이가 끝나고 남은 시간 동안 문제들을 기록하고 나의 풀이와 함께 기록해두었다. (물론 공개는 곤란..) 면접 준비하면서 내 풀이를 리뷰하니 좀 리팩토링할만한 부분들도 발견되고 하였으나 결과적으로 면접에서 면접관분들이 코딩테스트와 관련하여 질문하시지는 않았다 ^^; 그리고 5월 3일, 이번에도 카카오의 빠른 채용 프로세스 진행에 감탄하며 코딩테스트 합격 결과 통보와 함께 원격 인터뷰 예고를 받았다. 사실 여기서부터가 본격적인 근심과 걱정의 시작임을 느끼며…","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"커리어","slug":"잡담/커리어","permalink":"https://gtedha.github.io/categories/잡담/커리어/"}],"tags":[{"name":"카카오","slug":"카카오","permalink":"https://gtedha.github.io/tags/카카오/"},{"name":"채용","slug":"채용","permalink":"https://gtedha.github.io/tags/채용/"},{"name":"면접","slug":"면접","permalink":"https://gtedha.github.io/tags/면접/"},{"name":"후기","slug":"후기","permalink":"https://gtedha.github.io/tags/후기/"},{"name":"검색시스템","slug":"검색시스템","permalink":"https://gtedha.github.io/tags/검색시스템/"},{"name":"코딩 테스트","slug":"코딩-테스트","permalink":"https://gtedha.github.io/tags/코딩-테스트/"}]},{"title":"카카오 채용 과정 후기 1편","slug":"kakao-recruitment-review-1","date":"2019-07-04T10:00:00.000Z","updated":"2019-07-04T14:18:00.000Z","comments":true,"path":"2019/07/04/kakao-recruitment-review-1/","link":"","permalink":"https://gtedha.github.io/2019/07/04/kakao-recruitment-review-1/","excerpt":"","text":"지원 준비 과정과 검색시스템팀 지원2019년 4월 23일부터 시작되어 5월 30일에 최종 합격 소식을 듣기까지의 약 한 달 동안 진행된 카카오 채용 과정에 대한 후기를 남기고자 한다. 2년이 조금 넘는 시간동안 로봇 회사에서 좋은 사람들과 좋은 시간을 보내며 로봇 소프트웨어 개발에 몰두했지만, 소프트웨어 전문 회사가 아니기 때문에 겪은 내 성장 기회의 한계로 인해서 2019년 초부터 이직을 고려했었다. 전문연구요원이라는 대체 복무 중 이직이라는 조건 때문에 선택지가 좁았던 나는 큰 회사의 개발 환경을 경험해보자는 목표 아래 제 1 선택지로 카카오를 선택했고, 플랜 B, C에 대한 고려는 일단 미뤄두고 카카오 지원에 매진했었다. 전문연구요원이라는 제약 속의 도전이라 더 간절했고 매 과정마다의 기다림이 너무나도 길게 느껴졌던 그리고 그래서 더 기뻤던 경험의 후기이다. 준비 과정은 길었다. 2월 중순 쯤부터 ‘우선은 코딩 테스트 합격’이라는 목표아래 한 달 가량 leetcode 사이트에서 알고리즘 문제들을 풀었다. (프로그래머스, HackerRank, Codility 등등 여러 알고리즘 문제 풀이 사이트들을 경험해봤지만, 개인적으로는 leetcode가 제일 낫다.) 매일 1~2 문제씩 푸는 것을 목표 삼아서 시도했으나, 그러지 못한 날들도 있었다. 그래도 20문제 이상은 풀어봤던 것 같다. 한 문제 한 문제 진지하게. 작년 가을에 연습삼아 문제 풀이를 했을 때와 비교하여 감이 영 끌어올려지지 않아 초조했지만 3월 말이 되어서는 이러다 지원 시기를 놓치겠다 싶어서 카카오 채용 사이트에서 여러 채용 공고와 지원 서류에 작성해야될 항목들을 확인하였다. 우선 어느 채용 공고에 지원할지 정해야했다. 2년 넘게 로봇 소프트웨어 개발하면서 Python만 주구장창 사용했기 때문에 Python을 요구하거나 우대하는 공고여야 했으며, 그래도 내가 끌릴만한 업무를 제시하는 곳이어야 했다. 특히, Java 혹은 Spring 등이 자격 요건이 아닌 채용 공고여야 했다;; (Java 잘 몰라여..) 여러가지 후보군들이 있었지만 한참 Elasticsearch(ELK 스택)에 꽂혀있을 때였기 때문에 검색시스템팀이 가장 매력적으로 다가와서 이에 맞는 지원서를 작성하기 시작했다. 아.. 로봇 관련 커리어를 채용 관계자분들에게 어떻게 잘 포장해서 전달하느냐는 정말 큰 과제였다. 덤으로 대학원 과정에서는 가상현실 컨텐츠 개발을 했던터라 ‘왜 지원하게 되었는지’, ‘어떤 경험들을 쌓아왔기 때문에 이 포지션에 자신있는지’ 등을 어필하기가 더더욱 힘들었다. 이 포장의 노력에 대한 결과물은 이 링크와 이 링크에서 확인할 수 있다. 이렇게 지원서를 준비하는데 또 다시 약 한 달이 걸렸고, 더 완벽을 기하고 싶었지만 어느정도 마무리 하는 선에서 제출하기로 하였다. 4월 23일, 그렇게 내 지원서가 카카오에 제출되었다. 검색시스템팀 채용 공고","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"커리어","slug":"잡담/커리어","permalink":"https://gtedha.github.io/categories/잡담/커리어/"}],"tags":[{"name":"카카오","slug":"카카오","permalink":"https://gtedha.github.io/tags/카카오/"},{"name":"채용","slug":"채용","permalink":"https://gtedha.github.io/tags/채용/"},{"name":"면접","slug":"면접","permalink":"https://gtedha.github.io/tags/면접/"},{"name":"후기","slug":"후기","permalink":"https://gtedha.github.io/tags/후기/"}]},{"title":"Always Google It","slug":"always-google-it","date":"2019-07-03T10:30:00.000Z","updated":"2019-07-03T10:30:00.000Z","comments":true,"path":"2019/07/03/always-google-it/","link":"","permalink":"https://gtedha.github.io/2019/07/03/always-google-it/","excerpt":"","text":"소프트웨어 개발자들은 항상 구글을 끼고 산다. 내가 모르는 부분을 알아보기 위해서 혹은 같은 문제를 경험한 개발자들의 이야기를 찾아보기 위해서. 그래서 개발 중 구글링의 중요성은 두말할 필요없을 것 같다. ‘Always Google It’이라는 제목을 달고 이 포스팅에서 하고 싶은 말은 ‘개발자로서의 습관’에 관련한 것이다. 음.. 내가 이 습관을 가져서 스스로가 많이 발전했음을 느낀 그런 것이라 할까. 쉽게 얘기를 시작해보자. 개발자는 일상 생활에서 주변의 동료들 사이에서 혹은 개발 커뮤니티에서 개발과 관련된 이야기를 할 기회가 많다. 이런 이야기를 하다보면 그 오고가는 대화 속에 수많은 개발 용어들이 등장하게 되는데, 뭐 잘 알아듣는 것들도 있고 약간 아리송한 것들도 있고 아예 모르는 것들도 있겠지. 여기서 내가 말하는 습관이라는 것은 그 대화의 흐름을 급박하게 쫓아가야 하는 게 아니라면 대화 속의 토픽, 용어, 개념들 가운데 내가 자신있게 설명할 수 없는 것들은 바로바로 구글링을 하는 것이다. 기술적 트렌드, 컴퓨터 과학 관련 기본 개념, 개발 방법론, 특정 도메인 전문 용어 등등 무엇이든 개발 관련된 내용이라면 해당된다. 가지고 있는 스마트폰으로 인터넷 브라우저의 탭을 하나 띄워서 바로 검색하는게 내 경험상 가장 좋다. 중요한 건.. 일단 스마트폰 인터넷 브라우저 탭을 띄워서 구글 검색을 해놓는 것이다. 그 즉시 읽지 않아도 좋다. 검색한 내용을 탭에 띄워놓고 시간이 날 때마다 하나씩 읽음으로써 내 머릿속의 데이터베이스를 견고하게 만들어 나간다면 기술적 지식 수준이 점차 성장하는 즐거움을 맛볼 수 있다. 스마트폰을 사용하라는 것은 폰을 만지작거릴때마다 항상 공부할거리가 쌓여있음을 인지하게 되기 때문이다. 수십개의 탭이 쌓여있는 모습을 보면 ‘아… 공부해야지’ 하는 압박을 자연스럽게 받게될 것이다. 구글링을 하는 기준은 앞서 말했듯이 “자신있게 설명할 수 있는 가?”이다. 쉬운 예를 들어, 컴퓨터과학 분야에서 중요한 개념 중 하나인 ‘Thread’에 대해서 동료 개발자에게 설명한다고 상황을 설정해보자. 부끄럽지 않게 그리고 정확하게 설명할 수 있는가? ‘Thread’와 ‘Process’의 차이점에 대해서는? 막힘없이 설명할 자신이 없다면, 지금 바로 검색하는 것이다. 계속 검색해두다보면 쌓이는 브라우저 탭들을 보게될 것이다. 탭 하나를 정복하기 위해 관련 자료들을 차근차근 읽어보고 100% 이해가 된 것 같지 않다면 그 탭은 남겨두는 것이 좋다. 사람의 머리는 비상해서 남겨둔 탭을 나중에 다시 본다면 언젠가 별 이유없이 이해가 될 것이다. 그 때 탭 하나를 종료하면 된다. 지금부터, Always Google It!","categories":[{"name":"잡담","slug":"잡담","permalink":"https://gtedha.github.io/categories/잡담/"},{"name":"좋은 개발자","slug":"잡담/좋은-개발자","permalink":"https://gtedha.github.io/categories/잡담/좋은-개발자/"}],"tags":[{"name":"습관","slug":"습관","permalink":"https://gtedha.github.io/tags/습관/"},{"name":"구글링","slug":"구글링","permalink":"https://gtedha.github.io/tags/구글링/"},{"name":"좋은 개발자","slug":"좋은-개발자","permalink":"https://gtedha.github.io/tags/좋은-개발자/"}]}]}